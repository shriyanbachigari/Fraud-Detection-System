server:
  port: 8081

spring:
  application:
    name: consumer-service

  kafka:
    bootstrap-servers: ${KAFKA_BROKER:kafka:9092}
    consumer:
      group-id: fraud-detection-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:5432/${DB_NAME:frauddb}
    username: ${DB_USER:fraud_user}
    password: ${DB_PASSWORD:fraud_pass}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: 6379

ml-api:
  url: ${ML_API_URL:http://model-api:8000}

kafka:
  topic:
    transactions: ${TXN_TOPIC:transactions}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.frauddetection: INFO
    org.springframework.kafka: INFO
    org.apache.kafka: WARN